###
# #%L
# xplan-validator-core - XPlan Validator Core Komponente
# %%
# Copyright (C) 2008 - 2023 Freie und Hansestadt Hamburg, developed by lat/lon gesellschaft für raumbezogene Informationssysteme mbH
# %%
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# #L%
###
# This file contains error and warning messages related to XML
# Translation based on the german xerces impl jar: http://www.java2s.com/Code/Jar/x/DownloadxercesImpldejar.htm

BadMessageKey = Die zur Meldungs-ID geh\u00f6rende Fehlermeldung kann nicht gefunden werden.
FormatFailed = Beim Formatieren der folgenden Meldung ist ein interner Fehler aufgetreten:\n 
        
# Document messages
PrematureEOF=Vorzeitiges Ende der Datei.

# 2.1 Well-Formed XML Documents
RootElementRequired = Das Wurzelelement ist in einem wohlgeformten Dokument erforderlich.

# 2.2 Characters
InvalidCharInCDSect = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im CDATA-Abschnitt gefunden.
InvalidCharInContent = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im Elementinhalt des Dokuments gefunden.
TwoColonsInQName = Im Elementtyp oder Attributnamen wurde ein ung\u00fcltiges zweites \u201e:\u201c gefunden.
ColonNotLegalWithNS = Wenn Namespaces aktiviert sind, ist im Namen "{0}" kein Doppelpunkt zul\u00E4ssig.
InvalidCharInMisc = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im Markup nach dem Ende des Elementinhalts gefunden.
InvalidCharInProlog = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im Prolog des Dokuments gefunden.
InvalidCharInXMLDecl = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) in der XML-Deklaration gefunden.

# 2.4 Character Data and Markup
CDEndInContent = Die Zeichenkette \u201e]]>\u201c darf nur im Inhalt vorkommen, wenn sie zur Markierung des Endes eines CDATA-Abschnitts verwendet wird.

# 2.7 CDATA Sections
CDSectUnterminated = Der CDATA-Abschnitt muss mit \u201e]]>\u201c enden.

# 2.8 Prolog and Document Type Declaration
XMLDeclMustBeFirst = Die XML-Deklaration muss ganz am Anfang des Dokuments stehen.
EqRequiredInXMLDecl = In der XML-Deklaration muss auf \u201e{0}\u201c das Zeichen \u201e = \u201c folgen.
QuoteRequiredInXMLDecl = Der Wert nach \u201e{0}\u201c in der XML-Deklaration muss eine in Anf\u00fchrungszeichen gesetzte Zeichenkette sein.
XMLDeclUnterminated = Die XML-Deklaration muss mit \u201e?>\u201c enden.
VersionInfoRequired = Version in der XML-Deklaration erforderlich.
SpaceRequiredBeforeVersionInXMLDecl = Leerraum vor der Version des Pseudoattributs in der XML-Deklaration erforderlich.
SpaceRequiredBeforeEncodingInXMLDecl = Leerraum vor dem kodierenden Pseudoattribut in der XML-Deklaration erforderlich.
SpaceRequiredBeforeStandalone = Leerraum vor dem kodierenden Pseudoattribut in der XML-Deklaration erforderlich.
MarkupNotRecognizedInProlog = Das Markup im Dokument vor dem Wurzelelement muss wohlgeformt sein.
MarkupNotRecognizedInMisc = Das Markup im Dokument nach dem Wurzelelement muss wohlgeformt sein.
AlreadySeenDoctype = Dokumenttyp bereits vorhanden.
DoctypeNotAllowed = DOCTYPE ist nicht erlaubt, wenn die Funktion "http://apache.org/xml/features/disallow-doctype-decl" auf \u201etrue\u201c gesetzt ist.
ContentIllegalInProlog = Im Prolog ist kein Inhalt erlaubt.
ReferenceIllegalInProlog = Referenz ist im Prolog nicht erlaubt.
# Trailing Misc
ContentIllegalInTrailingMisc=Im nachgestellten Abschnitt ist kein Inhalt erlaubt.
ReferenceIllegalInTrailingMisc=Referenz ist im nachgestellten Abschnitt nicht erlaubt.
        
# 2.9 Standalone Document Declaration
SDDeclInvalid = Der deklarierte Wert f\u00fcr das eigenst\u00e4ndige Dokument muss \u201eyes\u201c oder \u201eno\u201c, nicht \u201e{0}\u201c sein.

# 2.12 Language Identification
XMLLangInvalid = Der xml:lang-Attributwert \u201e{0}\u201c ist eine ung\u00fcltige Sprach-ID.

# 3. Logical Structures
ETagRequired = Der Elementtyp \u201e{0}\u201c muss durch das entsprechende End-Tag \u201e</{0}>\u201c abgeschlossen werden.

# 3.1 Start-Tags, End-Tags, and Empty-Element Tags
ElementUnterminated = Auf Elementtyp \u201e{0}\u201c muss die Attributspezifikation \u201e>\u201c bzw. \u201e/>\u201c folgen.
EqRequiredInAttribute = Auf den Attributnamen "{1}", der einem Elementtyp "{0}" zugeordnet ist, muss das Zeichen " = " folgen.
OpenQuoteExpected =\u00F6ffnendes Anf\u00FChrungszeichen f\u00FCr Attribut "{1}" erwartet, das einem Elementtyp "{0}" zugeordnet ist.
CloseQuoteExpected = Schlie\u00DFendes Anf\u00FChrungszeichen f\u00FCr Attribut "{1}" erwartet, das einem Elementtyp "{0}" zugeordnet ist.
AttributeNotUnique = Attribut \u201e{1}\u201c wurde bereits f\u00fcr Element \u201e{0}\u201c spezifiziert.
AttributeNSNotUnique = Attribut \u201e{1}\u201c, das an Namensraum \u201e{2}\u201c gebunden ist, wurde bereits f\u00fcr Element \u201e{0}\u201c spezifiziert.
ETagUnterminated = Das End-Tag f\u00fcr Elementtyp \u201e{0}\u201c muss mit dem Trennzeichen \u201e>\u201c enden.
MarkupNotRecognizedInContent = Der Inhalt von Elementen muss aus wohlgeformten Zeichendaten oder Markup bestehen.
DoctypeIllegalInContent = Ein DOCTYPE ist im Inhalt nicht erlaubt.

# 4.1 Character and Entity References
ReferenceUnterminated = Die Referenz muss durch das Trennzeichen \u201e;\u201c terminiert werden.

# 4.3.2 Well-Formed Parsed Entities
ReferenceNotInOneEntity = Die Referenz muss vollst\u00e4ndig in der gleichen geparsten Entit\u00e4t enthalten sein.
ElementEntityMismatch = Das Element \u201e{0}\u201c muss mit der gleichen Entit\u00e4t beginnen und enden.
MarkupEntityMismatch=XML-Dokumentstrukturen m\u00fcssen mit der gleichen Entit\u00e4t beginnen und enden. 
        
# Messages common to Document and DTD
# 2.2 Characters
InvalidCharInAttValue = Ung\u00FCltiges XML-Zeichen (Unicode: 0x{2}) im Wert des Attributs "{1}" gefunden; Element ist "{0}".
InvalidCharInComment = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im Kommentar gefunden.
InvalidCharInPI = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) in der Verarbeitungsanweisung gefunden.
InvalidCharInInternalSubset = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im internen Subset der DTD gefunden.
InvalidCharInTextDecl = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) in der Textdeklaration gefunden.

# 2.3 Common Syntactic Constructs
QuoteRequiredInAttValue = Der Wert des Attributs \u201e{1}\u201c muss entweder mit einem einfachen oder einem doppelten Anf\u00fchrungszeichen beginnen.
LessthanInAttValue = Der Wert des Attributs "{1}", das einem Elementtyp "{0}" zugeordnet ist, darf das Zeichen "<" nicht enthalten.
AttributeValueUnterminated = Der Wert f\u00fcr Attribut \u201e{1}\u201c muss mit dem entsprechenden Anf\u00fchrungszeichen enden.

# 2.5 Comments
InvalidCommentStart = Kommentar muss mit \u201e<!--\u201c beginnen.
DashDashInComment = Die Zeichenkette \u201e--\u201c ist in Kommentaren nicht erlaubt.
CommentUnterminated = Der Kommentar muss mit \u201e-->\u201c enden.
COMMENT_NOT_IN_ONE_ENTITY = Der Kommentar ist nicht in der gleichen Entit\u00E4t enthalten.

# 2.6 Processing Instructions
PITargetRequired = Die Verarbeitungsanweisung muss mit dem Namen des Ziels beginnen.
SpaceRequiredInPI = Leerraum zwischen dem Verarbeitungsanweisungsziel und den Daten erforderlich.
PIUnterminated = Die Verarbeitungsanweisung muss mit \u201e?>\u201c enden.
ReservedPITarget = Das Verarbeitungsanweisungsziel, das \u201e[xX][mM][lL]\u201c entspricht, ist nicht erlaubt.
PI_NOT_IN_ONE_ENTITY = Die Verarbeitungsanweisung ist nicht in der gleichen Entit\u00e4t eingeschlossen.

# 2.8 Prolog and Document Type Declaration
VersionInfoInvalid = Ung\u00fcltige Version \u201e{0}\u201c.
VersionNotSupported = XML-Version \u201e{0}\u201c wird nicht unterst\u00fctzt. Es wird nur XML 1.0 unterst\u00fctzt.
VersionNotSupported11 = XML-Version "{0}" wird nicht unterst\u00FCtzt. Es wird nur XML 1.0 und XML 1.1 unterst\u00FCtzt.

# 4.1 Character and Entity References
DigitRequiredInCharRef = Auf \u201e&#\u201c in einer Zeichenreferenz muss direkt eine dezimale Repr\u00e4sentation folgen.
HexdigitRequiredInCharRef = Auf \u201e&#x\u201c in einer Zeichenreferenz muss direkt eine hexadezimale Repr\u00e4sentation folgen.
SemicolonRequiredInCharRef = Die Zeichenreferenz muss mit dem Trennzeichen \u201e;\u201c enden.
InvalidCharRef = Zeichenreferenz \u201e&#{0}\u201c ist ein ung\u00fcltiges XML-Zeichen.
NameRequiredInReference = Der Entit\u00e4tsname muss direkt auf das \u201e&\u201c in der Entit\u00e4tsreferenz folgen.
SemicolonRequiredInReference = Die Referenz auf Entit\u00e4t \u201e{0}\u201c muss mit dem Trennzeichen \u201e;\u201c enden.

# 4.3.1 The Text Declaration
TextDeclMustBeFirst = Die Textdeklaration muss ganz am Anfang der externen geparsten Entit\u00e4t stehen.
EqRequiredInTextDecl = In der Textdeklaration muss auf \u201e{0}\u201c das Zeichen \u201e = \u201c folgen.
QuoteRequiredInTextDecl = Der Wert nach \u201e{0}\u201c in der Textdeklaration muss eine in Anf\u00fchrungszeichen gesetzte Zeichenkette sein.
CloseQuoteMissingInTextDecl = Schlie\u00dfendes Anf\u00fchrungszeichen im Wert nach \u201e{0}\u201c in der Textdeklaration fehlt.
SpaceRequiredBeforeVersionInTextDecl = Leerraum vor der Version des Pseudoattributs in der Textdeklaration erforderlich.
SpaceRequiredBeforeEncodingInTextDecl = Leerraum vor dem kodierenden Pseudoattribut in der Textdeklaration erforderlich.
TextDeclUnterminated = Die Textdeklaration muss mit \u201e?>\u201c enden.
EncodingDeclRequired = In der Textdeklaration muss die Kodierung deklariert sein.
NoMorePseudoAttributes = Keine weiteren Pseudoattribute erlaubt.
MorePseudoAttributes = Mehr Pseudoattribute erwartet.
PseudoAttrNameExpected = Pseudoattributname erwartet. 

# 4.3.2 Well-Formed Parsed Entities
CommentNotInOneEntity = Der Kommentar muss vollst\u00e4ndig in der gleichen geparsten Entit\u00e4t enthalten sein.
PINotInOneEntity = Die Verarbeitungsanweisung muss vollst\u00e4ndig in der gleichen geparsten Entit\u00e4t enthalten sein.# 4.3.3 Character Encoding in Entities
EncodingDeclInvalid = Ung\u00fcltiger Kodierungsname \u201e{0}\u201c.
EncodingByteOrderUnsupported = Angegebene Bytereihenfolge f\u00fcr Kodierung \u201e{0}\u201c wird nicht unterst\u00fctzt.
InvalidByte = Ung\u00fcltiges Byte {0} der {1}-Byte UTF-8-Folge.
ExpectedByte = Byte {0} der {1}-Byte UTF-8-Folge erwartet. 
InvalidHighSurrogate = Linke Bits (High-Surrogate) in UTF-8-Folge d\u00fcrfen 0x10 nicht \u00fcberschreiten. Es wurde aber 0x{0} gefunden.
OperationNotSupported = Methode \u201e{0}\u201c nicht von {1} Reader unterst\u00fctzt.
InvalidASCII = Byte "{0}" ist nicht im (7-Bit) ASCII-Zeichensatz enthalten.
CharConversionFailure = Eine Entit\u00E4t in einer bestimmten Kodierung darf keine in dieser Kodierung unzul\u00E4ssigen Sequenzen enthalten.
        
# DTD Messages
# 2.2 Characters
InvalidCharInEntityValue = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im literalen Entit\u00e4tswert gefunden.
InvalidCharInExternalSubset = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im externen Subset der DTD gefunden.
InvalidCharInIgnoreSect = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) im ausgeschlossenen bedingten Abschnitt gefunden.
InvalidCharInPublicID = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) in der Public-ID gefunden.
InvalidCharInSystemID = Ung\u00fcltiges XML-Zeichen (Unicode: 0x{0}) in der System-ID gefunden.

# 2.3 Common Syntactic Constructs
SpaceRequiredAfterSYSTEM = Leerraum nach dem Schl\u00fcsselwort SYSTEM in der DOCTYPE-Deklaration erforderlich.
QuoteRequiredInSystemID = Die System-ID muss entweder mit einem einfachen oder einem doppelten Anf\u00fchrungszeichen beginnen.
SystemIDUnterminated = Die System-ID muss mit dem entsprechenden Anf\u00fchrungszeichen enden.
SpaceRequiredAfterPUBLIC = Leerr\u00e4ume nach dem Schl\u00fcsselwort PUBLIC in der DOCTYPE-Deklaration erforderlich.
QuoteRequiredInPublicID = Die Public-ID muss entweder mit einem einfachen oder einem doppelten Anf\u00fchrungszeichen beginnen.
PublicIDUnterminated = Die Public-ID muss mit dem entsprechenden Anf\u00fchrungszeichen enden.
PubidCharIllegal = Das Zeichen (Unicode: 0x{0}) ist nicht in der Public-ID erlaubt.
SpaceRequiredBetweenPublicAndSystem = Leerr\u00e4ume zwischen der Public-ID und der System-ID erforderlich.

# 2.8 Prolog and Document Type Declaration
MSG_SPACE_REQUIRED_BEFORE_ROOT_ELEMENT_TYPE_IN_DOCTYPEDECL = Leerraum nach \u201e<!DOCTYPE\u201c in der Dokumenttypdeklaration erforderlich.
MSG_ROOT_ELEMENT_TYPE_REQUIRED = Der Wurzelelementtyp muss in der Dokumenttypdeklaration nach \u201e<!DOCTYPE\u201c stehen.
DoctypedeclUnterminated = Die Dokumenttypdeklaration f\u00fcr Wurzelelementtyp \u201e{0}\u201c muss mit \u201e>\u201c enden.
PEReferenceWithinMarkup = Die Parameterentit\u00e4tsreferenz \u201e%{0};\u201c kann nicht im Markup im internen Subset der DTD stehen.
MSG_MARKUP_NOT_RECOGNIZED_IN_DTD = Die Markup-Deklarationen, die in der Dokumenttypdeklaration enthalten sind oder auf die die Dokumenttypdeklaration zeigt, m\u00fcssen wohlgeformt sein.

# 2.10 White Space Handling
MSG_XML_SPACE_DECLARATION_ILLEGAL = Die Attributdeklaration f\u00fcr \u201exml:space\u201c muss als enummerierter Typ angegeben werden, dessen einzige m\u00f6gliche Werte \u201edefault\u201c und \u201epreserve\u201c sind.

# 3.2 Element Type Declarations
MSG_SPACE_REQUIRED_BEFORE_ELEMENT_TYPE_IN_ELEMENTDECL = Leerraum nach \u201e<!ELEMENT\u201c in der Elementtypdeklaration erforderlich.
MSG_ELEMENT_TYPE_REQUIRED_IN_ELEMENTDECL = Der Elementtyp ist in der Elementtypdeklaration erforderlich.
MSG_SPACE_REQUIRED_BEFORE_CONTENTSPEC_IN_ELEMENTDECL = Leerraum nach dem Elementtyp \u201e{0}\u201c in der Elementtypdeklaration erforderlich.
MSG_CONTENTSPEC_REQUIRED_IN_ELEMENTDECL = Der Constraint ist nach dem Elementtyp \u201e{0}\u201c in der Elementtypdeklaration erforderlich.
ElementDeclUnterminated = Die Deklaration f\u00fcr Elementtyp \u201e{0}\u201c muss mit \u201e>\u201c enden.

# 3.2.1 Element Content
MSG_OPEN_PAREN_OR_ELEMENT_TYPE_REQUIRED_IN_CHILDREN = In der Deklaration des Elementtyps \u201e{0}\u201c ist ein \u201e(\u201c-Zeichen oder ein Elementtyp erforderlich.
MSG_CLOSE_PAREN_REQUIRED_IN_CHILDREN = In der Deklaration des Elementtyps \u201e{0}\u201c ist eine \u201e)\u201c erforderlich.

# 3.2.2 Mixed Content
MSG_ELEMENT_TYPE_REQUIRED_IN_MIXED_CONTENT = In der Deklaration des Elementtyps \u201e{0}\u201c ist ein Elementtyp erforderlich.
MSG_CLOSE_PAREN_REQUIRED_IN_MIXED = In der Deklaration des Elementtyps \u201e{0}\u201c ist eine \u201e)\u201c erforderlich.
MixedContentUnterminated = Das gemischte Inhaltsmodell \u201e{0}\u201c muss mit \u201e)*\u201c enden, wenn die Kindelementtypen eingeschr\u00e4nkt sind.

# 3.3 Attribute-List Declarations
MSG_SPACE_REQUIRED_BEFORE_ELEMENT_TYPE_IN_ATTLISTDECL = Leerraum nach \u201e<!ATTLIST\u201c in der Attribute List Declaration erforderlich.
MSG_ELEMENT_TYPE_REQUIRED_IN_ATTLISTDECL = Der Elementtyp ist in der Attribute List Declaration erforderlich.
MSG_SPACE_REQUIRED_BEFORE_ATTRIBUTE_NAME_IN_ATTDEF = Leerraum vor dem Attributnamen in der Attribute List Declaration f\u00fcr Element \u201e{0}\u201c erforderlich.
AttNameRequiredInAttDef = Der Attributname muss in der Attribute List Declaration f\u00fcr Element \u201e{0}\u201c spezifiziert sein.
MSG_SPACE_REQUIRED_BEFORE_ATTTYPE_IN_ATTDEF = Leerraum vor dem Attributtyp in der Deklaration des Attributs \u201e{1}\u201c f\u00fcr Element \u201e{0}\u201c erforderlich.
AttTypeRequiredInAttDef = In der Deklaration von Attribut \u201e{1}\u201c f\u00fcr Element \u201e{0}\u201c ist der Attributtyp erforderlich.
MSG_SPACE_REQUIRED_BEFORE_DEFAULTDECL_IN_ATTDEF = Leerraum vor dem Attribut-Standardwert in der Deklaration des Attributs \u201e{1}\u201c f\u00fcr Element \u201e{0}\u201c erforderlich.
MSG_DUPLICATE_ATTRIBUTE_DEFINITION = F\u00fcr das Attribut \u201e{1}\u201c eines angegebenen Elements \u201e{0}\u201c ist mehr als eine Attributdefinition vorgegeben.

# 3.3.1 Attribute Types
MSG_SPACE_REQUIRED_AFTER_NOTATION_IN_NOTATIONTYPE = In der Attributdeklaration \u201e{1}\u201c muss nach \u201eNOTATION\u201c ein Leerraum stehen.
MSG_OPEN_PAREN_REQUIRED_IN_NOTATIONTYPE = Das Zeichen \u201e(\u201c' muss in der Attributdeklaration \u201e{1}\u201c auf \u201eNOTATION\u201c folgen.
MSG_NAME_REQUIRED_IN_NOTATIONTYPE = Der Notationsname ist in der Notationstypliste f\u00fcr die Attributdeklaration \u201e{1}\u201c erforderlich.
NotationTypeUnterminated = Die Notationstypliste muss in der Attributdeklaration \u201e{1}\u201c mit \u201e)\u201c' enden.
MSG_NMTOKEN_REQUIRED_IN_ENUMERATION = Der Name-Token ist in der enummerierten Typliste f\u00fcr die Attributdeklaration \u201e{1}\u201c erforderlich.
EnumerationUnterminated = Die enummerierte Typliste in der Attributdeklaration \u201e{1}\u201c muss mit \u201e)\u201c enden.
MSG_DISTINCT_TOKENS_IN_ENUMERATION = Der Enumerationswert "{1}" wurde in der Deklaration des Attributs "{2}" f\u00FCr Element "{0}" mehrmals angegeben. Die NMTOKENS in einer einzelnen Enumeration-Attributdeklaration m\u00FCssen alle eindeutig sein.
MSG_DISTINCT_NOTATION_IN_ENUMERATION = Der Enumerationswert "{1}" wurde in der Deklaration des Attributs "{2}" f\u00FCr Element "{0}" mehrmals angegeben. Die NOTATION-Namen in einer einzelnen NotationType-Attributdeklaration m\u00FCssen alle eindeutig sein.

# 3.3.2 Attribute Defaults
MSG_SPACE_REQUIRED_AFTER_FIXED_IN_DEFAULTDECL = In der Attributsdeklaration \u201e{1}\u201c muss nach \u201eFIXED\u201c ein Leerraum stehen.

# 3.4 Conditional Sections
IncludeSectUnterminated = Der eingeschlossene bedingte Abschnitt muss mit \u201e]]>\u201c enden.
IgnoreSectUnterminated = Der ausgeschlossene bedingte Abschnitt muss mit \u201e]]>\u201c enden.

# 4.1 Character and Entity References
NameRequiredInPEReference = Der Entit\u00e4tsname muss direkt auf das \u201e%\u201c in der Parameterentit\u00e4tsreferenz folgen.
SemicolonRequiredInPEReference = Die Parameterentit\u00e4tsreferenz \u201e%{0};\u201c muss mit dem Trennzeichen \u201e;\u201c enden.

# 4.2 Entity Declarations
MSG_SPACE_REQUIRED_BEFORE_ENTITY_NAME_IN_ENTITYDECL = Leerraum nach \u201e<!ENTITY\u201c in der Entit\u00e4tsdeklaration erforderlich.
MSG_SPACE_REQUIRED_BEFORE_PERCENT_IN_PEDECL = Leerraum zwischen \u201e<!ENTITY\u201c und dem Zeichen \u201e%\u201c in der Parameterentit\u00e4tsdeklaration erforderlich.
MSG_SPACE_REQUIRED_BEFORE_ENTITY_NAME_IN_PEDECL = Leerraum zwischen \u201e%\u201c und dem Entit\u00e4tsnamen in der Parameterentit\u00e4tsdeklaration erforderlich.
MSG_ENTITY_NAME_REQUIRED_IN_ENTITYDECL = Der Name der Entit\u00e4t ist in der Entit\u00e4tsdeklaration erforderlich.
MSG_SPACE_REQUIRED_AFTER_ENTITY_NAME_IN_ENTITYDECL = Leerraum zwischen dem Entit\u00e4tsnamen \u201e{0}\u201c und der Definition in der Entit\u00e4tsdeklaration erforderlich.
MSG_SPACE_REQUIRED_BEFORE_NOTATION_NAME_IN_UNPARSED_ENTITYDECL = Leerraum zwischen \u201eNDATA\u201c und dem Notationsnamen in der Deklaration f\u00fcr die Entit\u00e4t \u201e{0}\u201c erforderlich.
MSG_SPACE_REQUIRED_BEFORE_NDATA_IN_UNPARSED_ENTITYDECL = Leerraum vor \u201eNDATA\u201c in der Deklaration f\u00fcr die Entit\u00e4t \u201e{0}\u201c erforderlich.
MSG_NOTATION_NAME_REQUIRED_FOR_UNPARSED_ENTITYDECL = Der Notationsname ist in der Deklaration f\u00fcr die Entit\u00e4t \u201e{0}\u201c nach \u201eNDATA\u201c erforderlich.
EntityDeclUnterminated = Die Deklaration f\u00fcr die Entit\u00e4t \u201e{0}\u201c muss mit \u201e>\u201c enden.
MSG_DUPLICATE_ENTITY_DEFINITION = Entit\u00e4t \u201e{0}\u201c ist mehr als einmal deklariert. 

# 4.2.2 External Entities
ExternalIDRequired = Die externe Entit\u00e4tsdeklaration muss entweder mit \u201eSYSTEM\u201c oder mit \u201ePUBLIC\u201c beginnen.
MSG_SPACE_REQUIRED_BEFORE_PUBIDLITERAL_IN_EXTERNALID = Leerraum zwischen \u201ePUBLIC\u201c und der Public-ID erforderlich.
MSG_SPACE_REQUIRED_AFTER_PUBIDLITERAL_IN_EXTERNALID = Leerraum zwischen der Public-ID und der System-ID erforderlich.
MSG_SPACE_REQUIRED_BEFORE_SYSTEMLITERAL_IN_EXTERNALID = Leerraum zwischen \u201eSYSTEM\u201c und der System-ID erforderlich.
MSG_URI_FRAGMENT_IN_SYSTEMID = Die Fragment-ID darf nicht als Teil der System-ID \u201e{0}\u201c spezifiziert werden.

# 4.7 Notation Declarations
MSG_SPACE_REQUIRED_BEFORE_NOTATION_NAME_IN_NOTATIONDECL = Leerraum nach \u201e<!NOTATION\u201c in der Notationsdeklaration erforderlich.
MSG_NOTATION_NAME_REQUIRED_IN_NOTATIONDECL = Der Name der Notation ist in der Notationsdeklaration erforderlich.
MSG_SPACE_REQUIRED_AFTER_NOTATION_NAME_IN_NOTATIONDECL = Leerraum nach dem Notationsnamen \u201e{0}\u201c in der Notationsdeklaration erforderlich.
ExternalIDorPublicIDRequired = Die Deklaration f\u00fcr die Notation \u201e{0}\u201c muss eine System- oder eine Public-ID enthalten.
NotationDeclUnterminated = Die Deklaration f\u00fcr die Notation \u201e{0}\u201c muss mit \u201e>\u201c enden.
        
# Validation messages
DuplicateTypeInMixedContent = Der Elementtyp \u201e{1}\u201c ist bereits im Inhaltsmodell der Elementdeklaration \u201e{0}\u201c spezifiziert.
ENTITIESInvalid = Attributwert \u201e{1}\u201c des Typs ENTITIES muss der Name einer oder mehrerer ungeparster Entit\u00e4ten sein.
ENTITYInvalid = Attributwert \u201e{1}\u201c des Typs ENTITY muss der Name einer ungeparsten Entit\u00e4t sein.
IDDefaultTypeInvalid = Das ID-Attribut \u201e{0}\u201c muss den deklarierten Standardwert \u201e#IMPLIED\u201c oder \u201e#REQUIRED\u201c enthalten.
IDInvalid = Attributwert \u201e{0}\u201c des Typs ID muss ein Name sein.
IDInvalidWithNamespaces = Wenn Namespaces aktiviert sind, muss der Attributwert "{0}" des ID-Typs ein NCName sein.
IDNotUnique = Attributwert \u201e{0}\u201c des Typs ID muss innerhalb des Dokuments eindeutig sein.
IDREFInvalid = Attributwert \u201e{0}\u201c des Typs IDREF muss ein Name sein.
IDREFInvalidWithNamespaces = Wenn Namespaces aktiviert sind, muss der Attributwert "{0}" des IDREF-Typs ein NCName sein.
IDREFSInvalid = Attributwert \u201e{0}\u201c des Typs IDREFS muss ein Name oder mehrere Namen sein.
ILL_FORMED_PARAMETER_ENTITY_WHEN_USED_IN_DECL = Der Ersatztext der Parameterentit\u00e4t \u201e{0}\u201c muss richtig verschachtelte Deklarationen enthalten, wenn die Entit\u00e4tsreferenz als eine vollst\u00e4ndige Deklaration verwendet wird.
ImproperDeclarationNesting = Der Ersatztext der Parameterentit\u00e4t \u201e{0}\u201c muss richtig verschachtelte Deklarationen enthalten.
ImproperGroupNesting = Der Ersatztext der Parameterentit\u00e4t \u201e{0}\u201c muss richtg verschachtelte Klammernpaare enthalten.
INVALID_PE_IN_CONDITIONAL = Der Ersatztext der Parameterentit\u00e4t \u201e{0}\u201c muss den gesamten bedingten Abschnitt oder nur INCLUDE oder IGNORE enthalten.
MSG_ATTRIBUTE_NOT_DECLARED = Attribut \u201e{1}\u201c muss f\u00fcr Elementtyp \u201e{0}\u201c deklariert werden.
MSG_ATTRIBUTE_VALUE_NOT_IN_LIST = Attribut \u201e{0}\u201c mit Wert \u201e{1}\u201c muss einen Wert aus der Liste \u201e{2}\u201c haben.
MSG_ATTVALUE_CHANGED_DURING_NORMALIZATION_WHEN_STANDALONE = Der Wert \u201e{1}\u201c des Attributs \u201e{0}\u201c darf nicht durch Normalisierung (auf \u201e{2}\u201c) in einem eigenst\u00e4ndigen Dokument ge\u00e4ndert werden.
MSG_CONTENT_INCOMPLETE = Der Inhalt des Elementtyps \u201e{0}\u201c ist unvollst\u00e4ndig, er muss \u201e{1}\u201c entsprechen.
MSG_CONTENT_INVALID = Der Inhalt des Elementtyps \u201e{0}\u201c muss \u201e{1}\u201c entsprechen.
MSG_CONTENT_INVALID_SPECIFIED = Der Inhalt des Elementtyps "{0}" muss "{1}" entsprechen.  Untergeordnete Elemente des Typs "{2}" sind nicht erlaubt.
MSG_DEFAULTED_ATTRIBUTE_NOT_SPECIFIED = Attribut \u201e{1}\u201c f\u00fcr Elementtyp \u201e{0}\u201c hat einen Standardwert und muss in einem eigenst\u00e4ndigen Dokument spezifiziert werden.
MSG_DUPLICATE_ATTDEF = Attribut \u201e{1}\u201c ist bereits f\u00fcr Elementtyp \u201e{0}\u201c deklariert.
MSG_ELEMENT_ALREADY_DECLARED = Elementtyp \u201e{0}\u201c darf nicht mehr als einmal deklariert werden.
MSG_ELEMENT_NOT_DECLARED = Elementtyp \u201e{0}\u201c muss deklariert werden.
MSG_GRAMMAR_NOT_FOUND = Dokument ist ung\u00fcltig: keine Grammatik gefunden.
MSG_ELEMENT_WITH_ID_REQUIRED = Im Dokument muss ein Element mit der ID \u201e{0}\u201c vorkommen.
MSG_EXTERNAL_ENTITY_NOT_PERMITTED = Die Referenz auf die externe Entit\u00e4t \u201e{0}\u201c ist in einem eigenst\u00e4ndigen Dokument nicht erlaubt.
MSG_FIXED_ATTVALUE_INVALID = Attribut \u201e{1}\u201c mit Wert \u201e{2}\u201c muss den Wert \u201e{3}\u201c haben.
MSG_MORE_THAN_ONE_ID_ATTRIBUTE = Elementtyp \u201e{0}\u201c hat bereits ein Attribut \u201e{1}\u201c des Typs ID. Ein zweites Attribut \u201e{2}\u201c des Typs ID ist nicht erlaubt.
MSG_MORE_THAN_ONE_NOTATION_ATTRIBUTE = Elementtyp \u201e{0}\u201c hat bereits ein Attribut \u201e{1}\u201c des Typs NOTATION. Ein zweites Attribut \u201e{2}\u201c des Typs NOTATION ist nicht erlaubt.
MSG_NOTATION_NOT_DECLARED_FOR_NOTATIONTYPE_ATTRIBUTE = Die Notation \u201e{1}\u201c muss deklariert werden, wenn sie in der Notationstypliste f\u00fcr Attribut \u201e{0}\u201c referenziert wird.
MSG_NOTATION_NOT_DECLARED_FOR_UNPARSED_ENTITYDECL = Die Notation \u201e{1}\u201c muss deklariert werden, wenn sie in der ungeparsten Entit\u00e4tsdeklaration f\u00fcr \u201e{0}\u201c referenziert wird.
MSG_REFERENCE_TO_EXTERNALLY_DECLARED_ENTITY_WHEN_STANDALONE = Der Verweis auf Entit\u00E4t "{0}", die im externen Subset der DTD oder in einer Parameterentit\u00E4t deklariert ist, ist in einem eigenst\u00E4ndigen Dokument nicht erlaubt.
MSG_REQUIRED_ATTRIBUTE_NOT_SPECIFIED = Attribut \u201e{1}\u201c ist erforderlich und muss f\u00fcr Elementtyp \u201e{0}\u201c spezifiziert werden.
MSG_WHITE_SPACE_IN_ELEMENT_CONTENT_WHEN_STANDALONE = In einem eigenst\u00E4ndigen Dokument d\u00FCrfen sich keine Leerzeichen zwischen Elementen mit Elementinhalt befinden, die im externen Subset der DTD oder in einer Paramterentit\u00E4t deklariert sind.
NMTOKENInvalid = Attributwert \u201e{0}\u201c des Typs NMTOKEN muss ein Name-Token sein.
NMTOKENSInvalid = Attributwert \u201e{0}\u201c des Typs NMTOKENS muss ein Name-Token oder mehrere Name-Token sein.
NoNotationOnEmptyElement = Elementtyp "{0}", der als EMPTY deklariert wurde, kann nicht Attribut "{1}" des Typs NOTATION deklarieren.
RootElementTypeMustMatchDoctypedecl = Dokumentwurzelelement \u201e{1}\u201c muss DOCTYPE-Wurzel \u201e{0}\u201c entsprechen.
UndeclaredElementInContentSpec = Das Inhaltsmodell des Elements \u201e{0}\u201c bezieht sich auf das undeklarierte Element \u201e{1}\u201c.
UniqueNotationName = Die Deklaration f\u00FCr die Notation "{0}" ist nicht eindeutig. Ein angegebener Name darf nur in einer Notationsdeklaration deklariert werden.
ENTITYFailedInitializeGrammar =  ENTITYDatatype-Validator: Fehler. Initialisierungsmethode muss mit einer g\u00fcltigen Grammatikreferenz aufgerufen werden. 	
ENTITYNotUnparsed = Entit\u00e4t \u201e{0}\u201c ist nicht ungeparst.
ENTITYNotValid = Entit\u00e4t \u201e{0}\u201c ist nicht g\u00fcltig.
EmptyList = Wert des Typs ENTITIES, IDREFS und NMTOKENS kann keine leere Liste sein.

# Entity related messages
# 3.1 Start-Tags, End-Tags, and Empty-Element Tags
ReferenceToExternalEntity = Die externe Entit\u00e4tsreferenz \u201e&{0};\u201c ist nicht in einem Attributwert erlaubt.

# 4.1 Character and Entity References
EntityNotDeclared = Die Entit\u00e4t \u201e{0}\u201c wurde referenziert, aber nicht deklariert.
ReferenceToUnparsedEntity = Die ungeparste Entit\u00e4tsreferenz \u201e&{0};\u201c ist nicht erlaubt.
RecursiveReference = Rekursive Entit\u00e4tsreferenz \u201e{0}\u201c. (Referenzpfad: {1}),
RecursiveGeneralReference = Rekursive allgemeine Entit\u00e4tsreferenz \u201e&{0};\u201c. (Referenzpfad: {1}),
RecursivePEReference = Rekursive Parameterentit\u00e4tsreferenz \u201e%{0};\u201c. (Referenzpfad: {1}),

# 4.3.3 Character Encoding in Entities
EncodingNotSupported = Die Kodierung \u201e{0}\u201c wird nicht unterst\u00fctzt.
EncodingRequired = Eine geparste Entit\u00e4t, die nicht in UTF-8 oder UTF-16 kodiert ist, muss eine Kodierungsdeklaration enthalten.
        
# Namespaces support
# 4. Using Qualified Names
IllegalQName = Element oder Attribut entsprechen nicht der QName-Produktion: QName::=(NCName':')?NCName. 
ElementXMLNSPrefix = Das Element \u201e{0}\u201c kann \u201exmlns\u201c nicht als Pr\u00e4fix haben.
ElementPrefixUnbound = Das Pr\u00e4fix \u201e{0}\u201c f\u00fcr Element \u201e{1}\u201c ist nicht gebunden.
AttributePrefixUnbound = Das Pr\u00E4fix "{2}" f\u00FCr Attribut "{1}", das einem Elementtyp "{0}" zugeordnet ist, ist nicht gebunden.
EmptyPrefixedAttName = Der Wert des Attributs \u201e{0}\u201c ist ung\u00fcltig. Namensraum-Bindungen mit Pr\u00e4fix k\u00f6nnen nicht leer sein.
PrefixDeclared = Das Namensraum-Pr\u00e4fix \u201e{0}\u201c wurde nicht deklariert.
CantBindXMLNS = Das Pr\u00e4fix \u201exmlns\u201c kann nicht explizit an einen Namensraum gebunden werden. Ebenso kann der Namensraum f\u00fcr \u201exmlns\u201c nicht explizit an ein Pr\u00e4fix gebunden werden.
CantBindXML = Das Pr\u00e4fix \u201exml\u201c kann nur an seinen gew\u00f6hnlichen Namensraum gebunden werden. Ebenso kann der Namensraum f\u00fcr \u201exml\u201c nur an das Pr\u00e4fix \u201exml\u201c gebunden werden.
MSG_ATT_DEFAULT_INVALID = Der Standardwert \u201e{1}\u201c des Attributs \u201e{0}\u201c ist aufgrund der lexikalischen Beschr\u00e4nkungen dieses Attributtyps nicht zul\u00e4ssig.

# REVISIT: These need messages
MSG_SPACE_REQUIRED_AFTER_SYSTEMLITERAL_IN_EXTERNALID=MSG_SPACE_REQUIRED_AFTER_SYSTEMLITERAL_IN_EXTERNALID
OpenQuoteMissingInDecl=Fehlendes \u00f6ffnendes Anf\u00fchrungszeichen in Deklaration
InvalidCharInLiteral=Ung\u00fcltiges Zeichen in Literal

#Application can set the limit of number of entities that should be expanded by the parser.
EntityExpansionLimitExceeded=Der Parser hat mehr als \u201e{0}\u201c Entit\u00e4tserweiterungen in diesem Dokument gefunden; dies ist der Maximalwert, den die Anwendung zul\u00e4sst.
