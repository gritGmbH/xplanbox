openapi: 3.0.1
info:
  title: XPlanValidatorAPI
  description: XPlanValidator REST API
  termsOfService: http://xplanbox.lat-lon.de/terms/
  contact:
    email: info@lat-lon.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
servers:
  - url: https://xplanbox.lat-lon.de/xvalidator/api/v1
  - url: http://xplanbox.lat-lon.de/xvalidator/api/v1
tags:
  - name: validate
    description: Validate XPlanGML documents
    externalDocs:
      description: xPlanBox
      url: http://xplanbox.lat-lon.de
paths:
  /:
    get:
      summary: OpenAPI document
      description: API documentation
      operationId: openApi
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
  /info:
    get:
      summary: Show system and application configuration
      description: Returns the system and application configuration
      operationId: showConfig
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfig'
  /validate:
    post:
      tags:
        - validate
      summary: Validate XPlanGML or XPlanArchive
      description: Validates XPlanGML or XPlanArchive file
      operationId: validate
      parameters:
        - name: X-Filename
          in: header
          description: Name of the file to be uploaded
          schema:
            type: string
          example: File names such as xplan.gml, xplan.xml, xplan.zip
        - name: name
          in: query
          description: Name of the validation
          schema:
            type: string
          example: 'xplan-1, Pr√ºfbericht_Torstrasse_10, report#4223'
        - name: skipSemantisch
          in: query
          description: skip semantische Validierung
          schema:
            type: boolean
            default: false
        - name: skipGeometrisch
          in: query
          description: skip geometrische Validierung
          schema:
            type: boolean
            default: false
        - name: skipFlaechenschluss
          in: query
          description: skip Flaechenschluss Ueberpruefung
          schema:
            type: boolean
            default: false
        - name: skipGeltungsbereich
          in: query
          description: skip Geltungsbereich Ueberpruefung
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              description: XPlanGML or XPlanArchive (application/zip) file to upload
              format: binary
          text/xml:
            schema:
              $ref: '#/components/schemas/XPlanGML'
          application/gml+xml:
            schema:
              $ref: '#/components/schemas/XPlanGML'
        required: true
      responses:
        200:
          description: ValidationReport
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationReport'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationReport'
            application/pdf:
              schema:
                type: string
                format: binary
            application/zip:
              schema:
                type: string
                format: binary
                description: Contains validation report in PDF, SHAPE, PNG file format
        400:
          description: Invalid input
        405:
          description: Invalid method
        406:
          description: Invalid content only XPlanGML or ZIP with XPlanGML is accepted
        415:
          description: Unsupported Media Type, only XML or ZIP is accepted
        default:
          description: Unexpected error
components:
  schemas:
    XPlanGML:
      type: string
      format: binary
      description: 'XPlanGML to upload'
    RulesMetadata:
      type: object
      properties:
        version:
          type: string
          example: 0.9.14
        source:
          type: string
          example: 'https://bitbucket.org/geowerkstatt-hamburg/xplanung/get/v0.9.14.zip'
    SystemConfig:
      type: object
      properties:
        version:
          type: string
          description: Version der xPlanBox
          example: 'v3.4.0'
        rulesMetadata:
          $ref: '#/components/schemas/RulesMetadata'
        supportedXPlanGmlVersions:
          type: array
          items:
            type: string
            example: "XPLAN_51"
            enum: [ XPLAN_3,XPLAN_40,XPLAN_41,XPLAN_50,XPLAN_51,XPLAN_52 ]
    ValidationReport:
      type: object
      properties:
        filename:
          type: string
          example: xplan52-test.gml
        name:
          type: string
          example: xplan52-test
        date:
          type: string
          format: date-time
          example: '2020-08-24T15:06:36.662Z'
        valid:
          type: boolean
          example: false
        externalReferences:
          type: array
          items:
            type: string
            example: 'stelling.png'
        wmsUrl:
          type: string
          format: uri
          example: https://xplanbox.lat-lon.de/xplan-validator-wms/services/wms?PLANWERK_MANAGERID=13
        rulesMetadata:
          $ref: '#/components/schemas/RulesMetadata'
        validationResult:
          $ref: '#/components/schemas/ValidationReportValidationResult'
    ValidationReportValidationResult:
      type: object
      properties:
        semantisch:
          $ref: '#/components/schemas/ValidationReportValidationResultSemantisch'
        geometrisch:
          $ref: '#/components/schemas/ValidationReportValidationResultGeometrisch'
        syntaktisch:
          $ref: '#/components/schemas/ValidationReportValidationResultSyntaktisch'
    ValidationReportValidationResultGeometrisch:
      type: object
      properties:
        valid:
          type: boolean
          example: false
        errors:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
    ValidationReportValidationResultSemantisch:
      type: object
      properties:
        valid:
          type: boolean
          example: false
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ValidationReportValidationResultSemantischRules'
    ValidationReportValidationResultSemantischRules:
      type: object
      properties:
        name:
          type: string
        isValid:
          type: boolean
        message:
          type: string
        invalidFeatures:
          type: array
          items:
            type: string
            description: GML-ID
            example: GML_b4e47d29-d21c-42ab-85b7-b12ea57e89f2
    ValidationReportValidationResultSyntaktisch:
      type: object
      properties:
        valid:
          type: boolean
          example: false
        messages:
          type: array
          items:
            type: string
