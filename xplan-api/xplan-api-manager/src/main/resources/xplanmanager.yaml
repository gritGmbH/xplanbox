openapi: 3.0.1
info:
  title: XPlanManagerAPI
  description: XPlanManager REST API
  termsOfService: http://xplanbox.lat-lon.de/terms/
  contact:
    email: info@lat-lon.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.3
servers:
  - url: https://xplanbox.lat-lon.de/xmanager/api/v1
  - url: http://xplanbox.lat-lon.de/xmanager/api/v1
tags:
  - name: validate
    description: Validate XPlanGML documents
    externalDocs:
      description: xPlanBox
      url: http://xplanbox.lat-lon.de
  - name: manage
    description: Manage XPlanGML documents
    externalDocs:
      description: xPlanBox
      url: http://xplanbox.lat-lon.de
  - name: search
    description: Search for XPlanGML documents
    externalDocs:
      description: xPlanBox
      url: http://xplanbox.lat-lon.de
paths:
  /:
    get:
      summary: OpenAPI document
      description: Uploads XPlanGML or XPlanArchive file
      operationId: api
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
  /validate:
    post:
      tags:
        - validate
      summary: Upload XPlanGML or XPlanArchive
      description: Uploads XPlanGML or XPlanArchive file
      operationId: upload
      parameters:
        - name: X-Filename
          in: header
          description: Name of the file to be uploaded
          example: File names such as xplan.gml, xplan.xml, xplan.zip
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: XPlanGML or XPlanArchive (application/zip) file to upload
          text/xml:
            schema:
              $ref: '#/components/schemas/XPlanGML'
          application/gml+xml:
            schema:
              $ref: '#/components/schemas/XPlanGML'
        required: true
      responses:
        200:
          description: successful upload confirmed by session ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadReport'
        406:
          description: Invalid input
          content: {}
        default:
          description: Unexpected error
          content: {}
  /validate/{sessionId}:
    get:
      tags:
        - validate
      summary: Validate uploaded XPlanGML or XPlanArchive
      description: Start validation using the given parameters
      operationId: validate
      parameters:
        - name: sessionId
          in: path
          description: Session ID of the validation
          example: '3fa85f64-5717-4562-b3fc-2c963f66afa6'
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Name of the validation
          example: 'xplan-1, Prüfbericht_Torstrasse_10, report#4223'
          schema:
            type: string
        - name: skipGeometrisch
          in: query
          description: Geometrische Validierung ueberspringen
          schema:
            type: boolean
            default: false
        - name: skipSemantisch
          in: query
          description: Semantische Validierung ueberspringen
          schema:
            type: boolean
            default: false
        - name: skipFlaechenschluss
          in: query
          description: Ueberpruefung des Flaechenschluss ueberspringen
          schema:
            type: boolean
            default: false
        - name: skipGeltungsbereich
          in: query
          description: Ueberpruefung des Geltungsbereich ueberspringen
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: successful validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
        400:
          description: Invalid value for session ID
          content: {}
        404:
          description: Session ID is invalid, not found
          content: {}
        default:
          description: Unexpected error
          content: {}
  /plan:
    post:
      tags:
        - manage
      summary: Import the plan
      description: Imports the plan
      operationId: import
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
        400:
          description: Invalid value for session ID
          content: {}
        404:
          description: Session ID is invalid, not found
          content: {}
        default:
          description: Unexpected error
          content: {}
  /plan/{planId}:
    get:
      tags:
        - manage
        - search
      summary: Get plan identified by the given plan ID
      description: Returns an existing plan identified by the given plan ID
      operationId: get
      parameters:
        - name: planId
          in: path
          description: ID of the plan to be returned
          example: '1, 2, 3, 4, 5,...'
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status'
            application/zip:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Invalid tag value
          content: {}
        404:
          description: Invalid plan ID, not found
          content: {}
    put:
      tags:
        - manage
      summary: Update plan identified by the given plan ID
      description: Updates an existing plan identified by the given plan ID
      operationId: update
      parameters:
        - name: planId
          in: path
          description: ID of the plan to be updated
          example: '1, 2, 3, 4, 5,...'
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Invalid tag value
          content: {}
        404:
          description: Invalid plan ID, not found
          content: {}
    delete:
      tags:
        - manage
      summary: Delete plan identified by the given plan ID
      description: Deletes an existing plan identified by the given plan ID
      operationId: delete
      parameters:
        - name: planId
          in: path
          description: ID of the plan to be removed
          example: '1, 2, 3, 4, 5,...'
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
          content: {}
        400:
          description: Invalid tag value
          content: {}
        404:
          description: Invalid plan ID, not found
          content: {}
  /plan/name/{planName}:
    get:
      tags:
        - search
      summary: Get plan identified by the given planName
      description: Returns an existing plan identified by the given planName
      parameters:
        - name: planName
          in: path
          description: planName of the plan to be return
          example: 'bplan_1234, fplan-23, rplan20200803'
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
        404:
          description: Invalid plan name, not found
          content: {}
  /plans:
    get:
      tags:
        - search
      summary: Search for plan by name
      description: Returns a list of plans which match the search query
      parameters:
        - name: planName
          in: query
          description: The name of the plan to search for
          example: 'bplan_1234, fplan-23, rplan20200803'
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
  /info:
    get:
      summary: Show system and application configuration
      description: Returns the system and application configuration
      operationId: config
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfig'
components:
  schemas:
    XPlanGML:
      type: string
      format: binary
      description: 'XPlanGML to upload'
    UploadReport:
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
        wmsUrl:
          type: string
          example: https://xplanbox.lat-lon.de/xplan-validator-wms/services/wms?PLANWERK_MANAGERID=13
    ValidationReport:
      type: object
    Status:
      type: boolean
    SystemConfig:
      type: object
      properties:
        version:
          description: Version der xPlanBox
          type: string
          example: 'v3.4.0'
        crs:
          description: Konfiguriertes CRS für Rasterdatenhaltung
          type: string
          example: 'epsg:2835'
        raster:
          description: Typ der Rasterdatenhaltung
          type: string
          example: 'gdal or tiff'
        skipSemantisch:
          description: Semantische Validierung bei Import ueberspringen
          type: boolean
          default: false
        skipGeometrisch:
          description: Geometrische Validierung bei Import ueberspringen
          type: boolean
          default: false
        skipFlaechenschluss:
          description: Ueberpruefung des Flaechenschluss bei Import ueberspringen
          type: boolean
          default: false
        skipGeltungsbereich:
          description: Ueberpruefung des Geltungsbereich bei Import ueberspringen
          type: boolean
          default: false  