<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="adcdfd3f-0f4e-4107-8d7e-086010676cb7" activeEnvironment="Default" name="xplan-api-manager" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="91f12f7d-fc3a-44d4-b4a3-ece617357d35" wadlVersion="http://wadl.dev.java.net/2009/02" name="XPlanManagerAPI" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>XPlanManager REST API</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
      <con:endpoint>https://xplanbox.lat-lon.de/xmanager/api/v1</con:endpoint>
    </con:endpoints>
    <con:resource name="/" path="/" id="eabf8210-dcec-43a4-ba83-08abc123b551">
      <con:settings/>
      <con:parameters/>
      <con:method name="openApi" id="781e2799-2533-486c-b724-0e3be9f866ff" method="GET">
        <con:description>API documentation
OpenAPI document</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="8b84c013-ed6a-4a76-a8a8-87f39c1807f3" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
          <con:request/>
          <con:originalUri>https://xplanbox.lat-lon.de/xmanager/api/v1/</con:originalUri>
          <con:credentials>
            <con:username xsi:nil="true"/>
            <con:password xsi:nil="true"/>
            <con:domain xsi:nil="true"/>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/info" path="/info" id="e6ee4dce-9560-4d06-91fc-728a4cbfeede">
      <con:settings/>
      <con:parameters/>
      <con:method name="showConfig" id="ebdb43b4-de0a-4e4f-97d9-b83eab26b9d9" method="GET">
        <con:description>Returns the system and application configuration
Show system and application configuration</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="11f40bd4-e546-4bcf-9ce6-404b4279d786" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
          <con:credentials>
            <con:username xsi:nil="true"/>
            <con:password xsi:nil="true"/>
            <con:domain xsi:nil="true"/>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/plan" path="/plan" id="08410fb9-0d4d-4a21-abdc-9fb562102dd6">
      <con:settings/>
      <con:parameters/>
      <con:method name="import" id="c27aac35-4537-44de-80d1-a874c699e2b4" method="POST">
        <con:description>Imports the plan
Import the plan</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>X-Filename</con:name>
            <con:style>HEADER</con:style>
            <con:description>Name of the file to be uploaded</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>skipSemantisch</con:name>
            <con:style>QUERY</con:style>
            <con:description>skip semantische Validierung</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>skipGeometrisch</con:name>
            <con:style>QUERY</con:style>
            <con:description>skip geometrische Validierung</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>skipFlaechenschluss</con:name>
            <con:style>QUERY</con:style>
            <con:description>skip Flaechenschluss Ueberpruefung</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>skipGeltungsbereich</con:name>
            <con:style>QUERY</con:style>
            <con:description>skip Geltungsbereich Ueberpruefung</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>internalId</con:name>
            <con:style>QUERY</con:style>
            <con:description>internalId links to VerfahrensId</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>planStatus</con:name>
            <con:style>QUERY</con:style>
            <con:description>target for data storage, overrides the default derived from xplan:rechtsstand</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>405</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html;charset=utf-8</con:mediaType>
          <con:status>415 500 400</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/octet-stream</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:plan="http://localhost/xplan-api-manager/xmanager/api/v1/plan">plan:Response</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="bf7971d6-e318-4bdc-b279-2bb920237af7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
          <con:credentials>
            <con:username xsi:nil="true"/>
            <con:password xsi:nil="true"/>
            <con:domain xsi:nil="true"/>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/plan/name/{planName}" path="/plan/name/{planName}" id="261a2cfe-6f77-4ae1-a943-ff53ad732c08">
      <con:settings/>
      <con:parameters/>
      <con:method name="getByName" id="d54fdc4c-5e09-487e-8ba4-60e987149c6a" method="GET">
        <con:description>Returns an existing plan identified by the given planName
Get plan identified by the given planName</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>planName</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>planName of the plan to be return</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html;charset=utf-8</con:mediaType>
          <con:status>500 404</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:request name="Request 1" id="25618c12-48a4-4be8-8a88-5826c061b358" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
          <con:credentials>
            <con:username xsi:nil="true"/>
            <con:password xsi:nil="true"/>
            <con:domain xsi:nil="true"/>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/plan/{planId}" path="/plan/{planId}" id="f4b0c767-cef5-4102-88d4-aa55587459e5">
      <con:settings/>
      <con:parameters/>
      <con:method name="getById" id="1e733b3b-deaf-4006-9df3-c8c75d435429" method="GET">
        <con:description>Returns an existing plan identified by the given plan ID
Get plan identified by the given plan ID</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>planId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>ID of the plan to be returned</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html;charset=utf-8</con:mediaType>
          <con:status>405 500 404</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:plan="http://localhost/xplan-api-manager/xmanager/api/v1/plan/">plan:Response</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>planInfo</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/zip</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:ns="http://www.xplanung.de/xplangml/4/1">ns:XPlanAuszug</con:element>
        </con:representation>
        <con:request name="Request 1" id="f9bcc4d9-872e-472c-96b8-27484a6e67a3" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
          <con:credentials>
            <con:username xsi:nil="true"/>
            <con:password xsi:nil="true"/>
            <con:domain xsi:nil="true"/>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="delete" id="788d4d29-adb1-4d14-89ca-32e1951c3477" method="DELETE">
        <con:description>Deletes an existing plan identified by the given plan ID, limited to plans in status "in Aufstellung"
Delete plan identified by the given plan ID</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>planId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>ID of the plan to be removed</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>204</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html;charset=utf-8</con:mediaType>
          <con:status>405 500</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>204</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="d1cd7d2d-f354-4a5a-9fa0-1137ede48dcd" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
          <con:credentials>
            <con:username xsi:nil="true"/>
            <con:password xsi:nil="true"/>
            <con:domain xsi:nil="true"/>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/plans" path="/plans" id="59d88747-7f29-4272-89b6-edec1d3f1841">
      <con:settings/>
      <con:parameters/>
      <con:method name="findByName" id="63d9e1be-4e47-4aa1-a636-fef258951c90" method="GET">
        <con:description>Returns a list of plans which match the search query
Search for plan by name</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>planName</con:name>
            <con:style>QUERY</con:style>
            <con:description>The name of the plan to search for</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/yaml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="653c7a59-0292-405d-8596-a225f505b1fb" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
          <con:credentials>
            <con:username xsi:nil="true"/>
            <con:password xsi:nil="true"/>
            <con:domain xsi:nil="true"/>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="ae0d5def-8690-4dc0-ad4a-ca5fa4c2df24" name="XPlanManagerAPI TestSuite">
    <con:description>TestSuite generated for REST Service [XPlanManagerAPI]</con:description>
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="48d40a8f-be62-4af7-8832-85c982ee2148" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/ TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>TestCase generated for REST Resource [/] located at [/]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="Request 1" id="fa4a9a33-86e7-4ff6-8de1-b3339d33672c">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/" methodName="openApi" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Request 1" id="8b84c013-ed6a-4a76-a8a8-87f39c1807f3" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>https://xplanbox.lat-lon.de/xmanager/api/v1/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="a1670c9e-49b6-4a46-9dc2-cc12a19d2449" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2d0d51dc-af82-422d-b284-f483450276d1" name="JsonPath Match">
              <con:configuration>
                <path>$.openapi</path>
                <content>3.0.1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="eaa273e2-e395-4c3a-b3b0-4dcabb6498c1" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/info TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>TestCase generated for REST Resource [/info] located at [/info]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="Request 1" id="1f36ff6b-b1a4-45aa-9677-b4ae9ad14479">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/info" methodName="showConfig" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Request 1" id="11f40bd4-e546-4bcf-9ce6-404b4279d786" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/info</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="4e3dd521-27bb-4e43-8f8b-93095165dc9f" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="590e4313-3d64-4a15-ba7b-622018c5b711" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/plan TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>TestCase generated for REST Resource [/plan] located at [/plan]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="Import" id="9cb528a1-3c3f-42a8-b664-542193661822">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan" methodName="import" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Import" id="bf7971d6-e318-4bdc-b279-2bb920237af7" mediaType="application/octet-stream" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="175f3cab-acc4-43f8-857f-68775292193b" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="c208d8a8-95ee-415e-aac9-acb660fd11e2" name="planId">
              <con:configuration>
                <path>$.planId</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="308be031-7fff-48ca-890a-1256e0343a38" name="validationReport">
              <con:configuration>
                <path>$.validationReport</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:preemptive>true</con:preemptive>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:attachment>
              <con:name>Eidelstedt_4_V4.zip</con:name>
              <con:contentType>application/octet-stream</con:contentType>
              <con:size>16884</con:size>
              <con:contentId>Eidelstedt_4_V4.zip</con:contentId>
              <con:data></con:data>
              <con:id>4a828dae-bc3c-4b15-9551-81e40fea5f74</con:id>
            </con:attachment>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="skipFlaechenschluss" value="true"/>
              <con:entry key="skipSemantisch" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Skip none" id="e889d8ec-d819-4e8b-8220-2f4963722d8e">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan" methodName="import" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Skip none" id="bf7971d6-e318-4bdc-b279-2bb920237af7" mediaType="application/octet-stream" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="175f3cab-acc4-43f8-857f-68775292193b" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:preemptive>true</con:preemptive>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:attachment>
              <con:name>Eidelstedt_4_V4.zip</con:name>
              <con:contentType>application/octet-stream</con:contentType>
              <con:size>16884</con:size>
              <con:contentId>Eidelstedt_4_V4.zip</con:contentId>
              <con:data></con:data>
              <con:id>4a828dae-bc3c-4b15-9551-81e40fea5f74</con:id>
            </con:attachment>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Skip all" id="17c4b74f-4afa-4eb2-bf35-0ca4fa1a7d2c">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan" methodName="import" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Skip all" id="bf7971d6-e318-4bdc-b279-2bb920237af7" mediaType="application/octet-stream" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="175f3cab-acc4-43f8-857f-68775292193b" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="d5bc6c3e-6178-46f3-81c6-5d86e17fcc9c" name="planId">
              <con:configuration>
                <path>$.planId</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="f9c991f7-9088-43c5-a0d3-3fc254655893" name="validationReport">
              <con:configuration>
                <path>$.validationReport</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:preemptive>true</con:preemptive>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:attachment>
              <con:name>BP2070.zip</con:name>
              <con:contentType>application/octet-stream</con:contentType>
              <con:size>107849</con:size>
              <con:contentId>BP2070.zip</con:contentId>
              <con:data></con:data>
              <con:id>8121bd22-07a9-4204-af96-84c5ce1ce491</con:id>
            </con:attachment>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="skipFlaechenschluss" value="true"/>
              <con:entry key="skipGeltungsbereich" value="true"/>
              <con:entry key="skipGeometrisch" value="true"/>
              <con:entry key="skipSemantisch" value="true"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="Property Transfer" id="97924d20-6e14-430e-84cc-5e025084dfc6">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
            <con:name>planIdImport</con:name>
            <con:sourceType>Response</con:sourceType>
            <con:sourceStep>Import</con:sourceStep>
            <con:sourcePath>$.planId</con:sourcePath>
            <con:targetType>currentPlanIdImport</con:targetType>
            <con:targetStep>#TestSuite#</con:targetStep>
            <con:targetPath xsi:nil="true"/>
            <con:type>JSONPATH</con:type>
            <con:targetTransferType>JSONPATH</con:targetTransferType>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
            <con:name>planIdSkipAll</con:name>
            <con:sourceType>Response</con:sourceType>
            <con:sourceStep>Skip all</con:sourceStep>
            <con:sourcePath>$.planId</con:sourcePath>
            <con:targetType>currentPlanIdSkipAll</con:targetType>
            <con:targetStep>#TestSuite#</con:targetStep>
            <con:targetPath xsi:nil="true"/>
            <con:type>JSONPATH</con:type>
            <con:targetTransferType>JSONPATH</con:targetTransferType>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="c815d892-f080-42a7-b361-7059ccee0d5c" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/plan/name/{planName} TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>TestCase generated for REST Resource [/plan/name/{planName}] located at [/plan/name/{planName}]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="Request 1" id="c7b03bef-b0de-43e5-9baf-4d049f5f778f">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan/name/{planName}" methodName="getByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Request 1" id="25618c12-48a4-4be8-8a88-5826c061b358" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan/name/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="7af8bd28-cbdf-429d-adba-8fae4efb7ae5" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2857640b-809e-43dc-8632-5085f2a2c6f6" name="id">
              <con:configuration>
                <path>$.id</path>
                <content>${#TestSuite#currentPlanIdImport}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="0a3c4269-f153-4f4a-a0bf-e11e4a9ae7b1" name="type">
              <con:configuration>
                <path>$.type</path>
                <content>BP_Plan</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="planName" value="Eidelstedt 4" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="cb6bcba1-07a4-4fe1-ade2-32d0a4414daa" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/plans TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>TestCase generated for REST Resource [/plans] located at [/plans]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="ExactMatch" id="474680bd-be66-43c1-b66b-8738ecf34fde">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plans" methodName="findByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Request 1" id="653c7a59-0292-405d-8596-a225f505b1fb" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plans</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="7c256da6-27a4-473d-8c2d-bf06f2bba366" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8a5449af-71b6-49e9-81c3-7ae4f704dec1" name="id">
              <con:configuration>
                <path>$..id[0]</path>
                <content>${#TestSuite#currentPlanIdImport}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4e49f759-7fd9-4f6c-951e-09cd193baaf4" name="type">
              <con:configuration>
                <path>$..type[0]</path>
                <content>BP_Plan</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="planName" value="Eidelstedt 4" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="InExactMatch" id="57bff689-3253-4644-8977-b09480a6808d">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plans" methodName="findByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="InExactMatch" id="653c7a59-0292-405d-8596-a225f505b1fb" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plans</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="7c256da6-27a4-473d-8c2d-bf06f2bba366" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8a5449af-71b6-49e9-81c3-7ae4f704dec1" name="id">
              <con:configuration>
                <path>$..id[0]</path>
                <content>${#TestSuite#currentPlanIdImport}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4e49f759-7fd9-4f6c-951e-09cd193baaf4" name="type">
              <con:configuration>
                <path>$..type[0]</path>
                <content>BP_Plan</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="planName" value="eidelstedt" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="ffa0a9da-a0a7-45c5-8718-ca395f1ddf51" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/plan/{planId} TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>TestCase generated for REST Resource [/plan/{planId}] located at [/plan/{planId}]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="getById" id="40874807-7e0c-4ef9-87b9-dcdfeea321d4">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan/{planId}" methodName="getById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getById" id="f9bcc4d9-872e-472c-96b8-27484a6e67a3" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="89620a4b-f714-4db0-9115-1c1c4338e712" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c8c82a41-15bf-4fb3-b867-37d4a4c12879" name="id">
              <con:configuration>
                <path>$.id</path>
                <content>${#TestSuite#currentPlanIdImport}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ea4f3f24-1386-4aaf-b19a-089aacf007b1" name="type">
              <con:configuration>
                <path>$.type</path>
                <content>BP_Plan</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="planId" value="${#TestSuite#currentPlanIdImport}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getById Accept application/xml" id="cb1f57b5-6c9c-4bfb-8f7f-3fa0c21cd020">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan/{planId}" methodName="getById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getById Accept application/xml" id="f9bcc4d9-872e-472c-96b8-27484a6e67a3" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="89620a4b-f714-4db0-9115-1c1c4338e712" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" id="e146679e-59ee-4037-8d9d-f7bd42459d4a" name="id">
              <con:configuration>
                <path>/planInfo/id</path>
                <content>${#TestSuite#currentPlanIdImport}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" id="2fce8c64-83ba-49d0-b23f-01bc9b56551c" name="type">
              <con:configuration>
                <path>/planInfo/type</path>
                <content>BP_Plan</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="planId" value="${#TestSuite#currentPlanIdImport}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getById Accept application/zip" id="af3d894d-aede-435f-bcf3-83978eadc75e">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan/{planId}" methodName="getById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getById Accept application/zip" id="f9bcc4d9-872e-472c-96b8-27484a6e67a3" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/zip" xmlns="http://eviware.com/soapui/config"/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="89620a4b-f714-4db0-9115-1c1c4338e712" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="cb568805-5d6b-4e57-b12a-e10dd41bb8f2" name="Response Header application/zip">
              <con:configuration>
                <scriptText>def expectedHeader = ['application/zip']
def headers = messageExchange.response.responseHeaders
def actualHeader = headers['Content-Type']
assert expectedHeader == actualHeader</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="planId" value="${#TestSuite#currentPlanIdImport}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete import" id="9096ca08-33d8-47a4-ba2d-2565f6163c1a">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan/{planId}" methodName="delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete import" id="d1cd7d2d-f354-4a5a-9fa0-1137ede48dcd" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="859dc093-1e4d-4794-bcc1-58695077093f" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>204</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="planId" value="${#TestSuite#currentPlanIdImport}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete skip all" id="f7fe4042-b416-4ed5-8be7-3b2e61defca0">
        <con:settings/>
        <con:config service="XPlanManagerAPI" resourcePath="/plan/{planId}" methodName="delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete skip all" id="d1cd7d2d-f354-4a5a-9fa0-1137ede48dcd" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:8086/xplan-api-manager/xmanager/api/v1</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/xplan-api-manager/xmanager/api/v1/plan/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="859dc093-1e4d-4794-bcc1-58695077093f" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>204</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <entry key="planId" value="${#TestSuite#currentPlanIdSkipAll}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>currentPlanIdImport</con:name>
        <con:value>10</con:value>
      </con:property>
      <con:property>
        <con:name>currentPlanIdSkipAll</con:name>
        <con:value>11</con:value>
      </con:property>
    </con:properties>
  </con:testSuite>
  <con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:endpoint mode="COMPLEMENT" username="xplanbox" password="xpl@n!secure9">https://xplanbox.lat-lon.de/xmanager/api/v1</con:endpoint>
  </con:endpointStrategy>
  <con:properties/>
  <con:wssContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:sensitiveInformation/>
</con:soapui-project>