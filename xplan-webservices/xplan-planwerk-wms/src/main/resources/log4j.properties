#$HeadURL: svn+ssh://rbezema@svn.wald.intevation.org/deegree/deegree3/commons/trunk/src/log4j.properties $
# $Id: log4j.properties 17229 2009-04-08 15:14:30Z rbezema $ 
#
# =============================================================
# ------------------- deegree log configuration  --------------
# =============================================================
#
# This is the configuration file for the log4j-based deegree logging.
#
# =============================================================
# ------------------- log output configuration  ---------------
# =============================================================

# The rootLogger option defines where the log output should go. 
# Log4j uses appender to direct the output to a specific target.
# By default deegree logs to the console (appender: stdout)        
log4j.rootLogger=INFO, stdout
# To also log into a logfile (example below):
#log4j.rootLogger=INFO, logfile, stdout

# Below is the configuration of the log appender. The format of
# the log messages is configured with the ConversionPattern option. 
# see http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html

# =============== console output appender =====================
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{HH:mm:ss}] %5p: [%c{1}] %m%n

log4j.logger.org.deegree = INFO
#log4j.logger.org.deegree.featureinfo.serializing.XsltFeatureInfoSerializer = TRACE
#log4j.logger.org.deegree.services=TRACE
#log4j.logger.org.deegree.feature.persistence.sql=TRACE
#log4j.logger.org.deegree.feature=TRACE
#log4j.logger.org.deegree.feature.persistence.sql.rules.FeatureBuilderRelational=INFO
#log4j.logger.org.deegree.sqldialect.filter.AbstractWhereBuilder=TRACE
#log4j.logger.org.deegree.rendering=TRACE
#log4j.logger.org.deegree.filter=TRACE
#log4j.logger.org.deegree.style=TRACE
#log4j.logger.org.deegree.workspace=TRACE
#log4j.logger.org.deegree.layer.persistence=TRACE
#log4j.logger.org.deegree.layer=TRACE
#log4j.logger.org.deegree.services.controller.OGCFrontController=TRACE
#log4j.logger.org.deegree.layer.persistence.feature.FeatureStreamRenderer=TRACE
#log4j.logger.org.deegree.gml.feature=TRACE
#log4j.logger.org.deegree.protocol.wms.client=DEBUG
#log4j.logger.org.deegree.feature.persistence.sql.SQLFeatureStoreTransaction=TRACE
#log4j.logger.org.deegree.feature.persistence.sql.insert=TRACE
#log4j.logger.org.deegree.feature.persistence.sql=TRACE

# =============== 'deegree.log' file appender =================

#log.dir=${user.home}
#log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#log4j.appender.logfile.File=${log.dir}/deegree.log
#log4j.appender.logfile.MaxFileSize=1000KB
# Keep one backup file
#log4j.appender.logfile.MaxBackupIndex=1
#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.logfile.layout.ConversionPattern=%d %-5p [%c] %m%n


# =============================================================
# ---- log configuration for deegree packages and classes -----
# =============================================================
# The configuration is hierarchical, log levels will be 
# inherited from parents. Following log levels are available:
# TRACE (most messages)
# DEBUG
# INFO
# WARN
# ERROR
# FATAL (only fatal error messages)


# =================== common logging =========================
# The log level for all classes that are not configured below.
#log4j.logger.org.deegree=INFO
#log4j.logger.org.deegree.tile=DEBUG
#log4j.logger.org.deegree.layer.persistence.tile=DEBUG

#log4j.logger.org.deegree.protocol.wms.client=DEBUG
#log4j.logger.org.deegree.coverage.raster.container=DEBUG
#log4j.logger.org.deegree.rendering.r3d.opengl.rendering.dem.manager.TerrainRenderingManager=DEBUG
#log4j.logger.org.deegree.feature.gml.GMLFeatureDecoder=DEBUG

# ================== CRS specific logging =====================
#Information about the deegree interface to the crs package
#log4j.logger.org.deegree.crs=DEBUG

#log4j.logger.org.deegree.model.generic=DEBUG

#log4j.logger.org.deegree.crs.configuration.deegree=DEBUG

#log the deegree/proj4 CRSprovider
#log4j.logger.org.deegree.crs.configuration.DeegreeCRSProvider=DEBUG
#log4j.logger.org.deegree.crs.configuration.PROJ4CRSProvider=DEBUG

#log the CRSConfiguration.
#log4j.logger.org.deegree.crs.configuration.CRSConfiguration=DEBUG
#log4j.logger.org.deegree.crs.CRSFactory=DEBUG

#log the transformation factory
#log4j.logger.org.deegree.crs.transformations.TransformationFactory=DEBUG

# ==================== Rendering =============================

# log all (VERY verbose)
#log4j.logger.org.deegree.rendering=TRACE

#### 2D ####
# log all 2d operations (VERY verbose)
#log4j.logger.org.deegree.rendering.r2d=TRACE

# log what's rendered how by Java2DRenderer (really verbose, use for debugging the code)
#log4j.logger.org.deegree.rendering.r2d.Java2DRenderer=TRACE

# log what's funny about rendering (eg. rendering of null geometries, use for debugging eg. your WMS instance/client)
#log4j.logger.org.deegree.rendering.r2d.Java2DRenderer=DEBUG

# log which text is rendered how (for renderers using Java2D strokes)
#log4j.logger.org.deegree.rendering.r2d.strokes.TextStroke=DEBUG

# log which text is rendered how in detail (use for debugging code)
#log4j.logger.org.deegree.rendering.r2d.strokes.TextStroke=TRACE

#### 3D ####
# log all 3d operations (VERY verbose)
#log4j.logger.org.deegree.rendering.r3d=TRACE

# log tesselation status informations 
#log4j.logger.org.deegree.rendering.r3d.opengl.tesselation=TRACE

# log rendering status informations 
#log4j.logger.org.deegree.rendering.r3d.opengl.rendering=TRACE

#log rendering of the interactive components
#log4j.logger.org.deegree.rendering.r3d.opengl.display=TRACE

##The texture tile manager
#log4j.logger.org.deegree.rendering.r3d.opengl.rendering.dem.manager.TerrainRenderingManager=TRACE

# =================== Tools ================================
#The viewer class
#log4j.logger.org.deegree.tools.rendering.GLViewer=TRACE

#The cvs reader class
#log4j.logger.org.deegree.tools.rendering.manager.CSVReader=TRACE

#The vrml importer
#log4j.logger.org.deegree.tools.rendering.manager.buildings=DEBUG

#log4j.logger.org.deegree.protocol.wms.client.WMSClient111=DEBUG

# =================== Template ================================
#log4j.logger.org.deegree.package.package.ClassName=LOG_LEVEL
