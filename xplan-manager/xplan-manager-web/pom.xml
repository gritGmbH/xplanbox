<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>xplan-manager-web</artifactId>
  <packaging>war</packaging>
  <name>xplan-manager-web</name>
  <description>Webanwendung XPlanManagerWeb</description>

  <parent>
    <groupId>de.latlon.product.xplanbox</groupId>
    <artifactId>xplan-manager</artifactId>
    <version>7.2-SNAPSHOT</version>
  </parent>

  <properties>
    <gwt.moduleName>de.latlon.xplan.manager.web.XPlanMgrWeb</gwt.moduleName>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>net.ltgt.gwt.maven</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>de.xleitstelle.xplanung</groupId>
                  <artifactId>regeln</artifactId>
                  <overWrite>true</overWrite>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <includes>
                <include>index.html</include>
                <include>version.txt</include>
              </includes>
              <filtering>true</filtering>
            </resource>
            <resource>
              <directory>src/main/webapp</directory>
              <excludes>
                <exclude>index.html</exclude>
                <exclude>version.txt</exclude>
              </excludes>
              <filtering>false</filtering>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-ban-duplicate-classes</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicateClasses>
                  <ignoreClasses>
                    <ignoreClass>javax.activation.*</ignoreClass>
                    <ignoreClass>javax.xml.stream.*</ignoreClass>
                    <ignoreClass>org.apache.commons.logging.*</ignoreClass>
                    <ignoreClass>org.w3c.dom.*</ignoreClass>
                    <ignoreClass>org.eclipse.jdt.*</ignoreClass>
                  </ignoreClasses>
                  <scopes>
                    <scope>compile</scope>
                    <scope>provided</scope>
                  </scopes>
                  <findAllDuplicates>true</findAllDuplicates>
                  <ignoreWhenIdentical>true</ignoreWhenIdentical>
                </banDuplicateClasses>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>el-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gwtproject</groupId>
      <artifactId>gwt-dev</artifactId>
      <scope>provided</scope>
      <exclusions>
		  <exclusion>
			  <groupId>javax.annotation</groupId>
			  <artifactId>javax.annotation-api</artifactId>
		  </exclusion>
		  <exclusion>
  			  <groupId>net.sourceforge.htmlunit</groupId>
			  <artifactId>htmlunit</artifactId>
		  </exclusion>
		  <exclusion>
  			  <groupId>org.mortbay.jasper</groupId>
			  <artifactId>apache-el</artifactId>
		  </exclusion>
	  </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gwtproject</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.validation</groupId>
          <artifactId>validation-api</artifactId>
        </exclusion>
        <exclusion>
          <!-- already contained in xml-apis:xml-apis-ext:1.3.04 -->
          <groupId>org.w3c.css</groupId>
          <artifactId>sac</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gwtproject</groupId>
      <artifactId>gwt-servlet</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>de.latlon</groupId>
      <artifactId>deegree-layers-feature</artifactId>
    </dependency>
    <dependency>
      <groupId>de.latlon</groupId>
      <artifactId>deegree-core-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>de.latlon</groupId>
      <artifactId>deegree-sqldialect-postgis</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-layout-template-json</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
      <classifier>sources</classifier>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xplan-core-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xplan-core-commons</artifactId>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xplan-core-gwt</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xplan-core-gwt</artifactId>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xplan-core-manager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gwtopenmaps.openlayers</groupId>
      <artifactId>gwt-openlayers-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.fusesource.restygwt</groupId>
      <artifactId>restygwt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
    </dependency>
    <!-- Spring Security -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-ldap</artifactId>
    </dependency>
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>docker</id>
      <properties>
        <docker-image.skip>false</docker-image.skip>
        <docker-contextTarFile.expectedSizeInMat10pct>106</docker-contextTarFile.expectedSizeInMat10pct>
      </properties>
      <dependencies>
        <dependency> <!-- faked maven dependency to be after base docker image in the reactor build  -->
          <groupId>de.latlon.product.xplanbox</groupId>
          <artifactId>xplan-docker-tomcat-gdal</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>
        <dependency> <!-- faked maven dependency to be after volume initializer in the reactor build  -->
          <groupId>de.latlon.product.xplanbox</groupId>
          <artifactId>xplan-docker-volume-init</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>
        <dependency> <!-- faked maven dependency to be after xplan-database-docker image in the reactor build  -->
          <groupId>de.latlon.product.xplanbox</groupId>
          <artifactId>xplan-database-docker</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>
        <!-- Profiles -->
        <dependency>
          <groupId>de.xleitstelle.xplanung</groupId>
          <artifactId>regeln-berlin</artifactId>
        </dependency>
        <dependency>
          <groupId>de.xleitstelle.xplanung</groupId>
          <artifactId>regeln-brandenburg</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>${docker-image.namePrefix}/${docker-image.name}</name>
                </image>
                <image>
                  <name>${docker-image.namePrefix}/${docker-image.name}-hale</name>
                  <build>
                    <contextDir>${project.basedir}</contextDir>
                    <dockerFile>DockerfileHale</dockerFile>
                    <args>
                      <XPLANBOX_VERSION>${project.version}</XPLANBOX_VERSION>
                      <XPLANBOX_IMAGE_NAME_PREFIX>${docker-image.namePrefix}</XPLANBOX_IMAGE_NAME_PREFIX>
                      <WEB_CONTEXT>${project.artifactId}</WEB_CONTEXT>
                    </args>
                    <tags>
                      <tag>${project.version}</tag>
                    </tags>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
